(* http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.104.3022&rep=rep1&type=pdf *)
Inductive theorem : proposition -> Prop :=
  (* ----------------- Propositional calculus ----------------- *)
  (* Hilbert axioms for intuitionistic propositional logic *)
  | Hilbert_K : forall p q : proposition, theorem (p ==> q ==> p)
  | Hilbert_S : forall p q r : proposition, theorem ((p ==> q ==> r) ==> (p ==> q) ==> p ==> r)
  | (* Classic *)
    Classic_NotNot : forall p : proposition, theorem (~~p ==> p)
  | (* Modus Ponens *) (* p ==> q , p |- q *)
    MP : forall p q : proposition, theorem (p ==> q) -> theorem p -> theorem q
  (* ------------------ Predicate calculus ------------------ *)
  | Forall1 : forall (A : Set) (P : A -> proposition) (a : A), theorem (\-/P ==> P a)
  | (* x not in FV(q) (\-/x (q ==> (P x))) ==> q ==> (\-/x(P x)) *)
    Forall2 : forall (A : Set) (P : A -> proposition) (q : proposition), theorem (\-/(fun x : A => (q ==> P x)) ==> q ==> \-/P)
  | ForallRule : forall (A : Set) (P : A -> proposition), (forall x : A, theorem (P x)) -> theorem (\-/P)
  (* ----------------- Modal calculus ----------------- *)
  | (* Distribution Axiom *)
    K_K : forall (i : nat) (p q : proposition), theorem (K i p ==> K i (p ==> q) ==> K i q)
  | (* Knowledge Axiom *)
    K_T : forall (i : nat) (p : proposition), theorem (K i p ==> p)
  | (* Knowledge rule *)
    K_rule : forall (i : nat) (p : proposition), theorem p -> theorem (K i p)
  | (* Positive introspection *)
    K_4 : forall (i : nat) (p : proposition), theorem (K i p ==> K i (K i p))
  | (* Positive introspection *)
    K_5 : forall (i : nat) (p : proposition), theorem (~ K i p ==> K i (~ K i p))
  (* ----------------- Common knowledge logic ----------------- *)
  | Fixpoint_C : forall (g : list nat) (p : proposition), theorem (C g p ==> p & E g (C g p))
  | Greatest_Fixpoint_C : forall (g : list nat) (p q : proposition), theorem (q ==> p & E g q) -> theorem (q ==> C g p).